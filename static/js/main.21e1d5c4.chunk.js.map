{"version":3,"sources":["api.js","App.js","index.js"],"names":["getQuotes","a","axios","get","quotesData","App","useState","allQuotes","setAllQuotes","error","setError","previousQuotes","setPreviousQuotes","currentQuote","setCurrentQuote","isDisabled","setDisabled","getRandomQuote","length","randomNumber","Math","floor","random","quote","useEffect","then","response","data","catch","className","message","author","disabled","onClick","prevQuote","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAIaA,EAAS,uCAAG,4BAAAC,EAAA,sEACEC,IAAMC,IAHlB,yIAEU,cACjBC,EADiB,yBAEhBA,GAFgB,2CAAH,qD,eCiDPC,MAjDf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEA,SAASC,IACP,GAAIV,EAAUW,OAAS,EAAG,CACxB,IAAIC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWf,EAAUW,QACpDK,EAAQhB,EAAUY,GACtBL,EAAgBS,GAChBX,EAAkB,GAAD,mBAAKD,GAAL,CAAqBY,KAClCZ,EAAeO,OAAS,GAC1BF,GAAY,IAuBlB,OARAQ,qBAAU,WACRxB,IACGyB,MAAK,SAAAC,GAAQ,OAAIlB,EAAakB,EAASC,SACvCC,OAAM,SAAAnB,GAAK,OAAIC,EAASD,QAC1B,IAEHe,qBAAU,WAAQP,MAAoB,CAACV,IAGrC,sBAAKsB,UAAU,MAAf,UACGpB,GAAS,8BAAMA,EAAMqB,UACtB,mBAAGD,UAAU,aAAb,SAA2BhB,EAAaU,QACxC,mBAAGM,UAAU,cAAb,SAA4BhB,EAAakB,SACzC,sBAAKF,UAAU,eAAf,UACE,wBAAQG,SAAUjB,EAAYkB,QAxBpC,WACE,IAAIC,EAAYvB,EAAeA,EAAeO,OAAS,GACvDJ,EAAgBoB,GAChBvB,EAAewB,QAAQ,EAAG,GAC1BvB,EAAkBD,GACdA,EAAeO,OAAS,GAC1BF,GAAY,IAkB+Ca,UAAU,cAAnE,sBACA,wBAAQI,QAAShB,EAAgBY,UAAU,cAA3C,iCC3CRO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.21e1d5c4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst apiURL = 'https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json';\n\nexport const getQuotes = async () => {\n  const quotesData = await axios.get(apiURL);\n  return quotesData;\n}","import { useEffect, useState } from 'react';\nimport { getQuotes } from './api.js';\nimport './App.css';\n\nfunction App() {\n  const [allQuotes, setAllQuotes] = useState([]);\n  const [error, setError] = useState(null);\n  const [previousQuotes, setPreviousQuotes] = useState([]);\n  const [currentQuote, setCurrentQuote] = useState([]);\n  const [isDisabled, setDisabled] = useState(true);\n\n  function getRandomQuote() {\n    if (allQuotes.length > 0) {\n      let randomNumber = Math.floor(Math.random() * allQuotes.length);\n      let quote = allQuotes[randomNumber];\n      setCurrentQuote(quote);\n      setPreviousQuotes([...previousQuotes, quote]);\n      if (previousQuotes.length > 0) {\n        setDisabled(false);\n      }\n    }\n  }\n\n  function getPreviousQuote() {\n    let prevQuote = previousQuotes[previousQuotes.length - 2];\n    setCurrentQuote(prevQuote);\n    previousQuotes.splice(-1, 1);\n    setPreviousQuotes(previousQuotes);\n    if (previousQuotes.length < 2) {\n      setDisabled(true);\n    }\n  }\n\n  useEffect(() => {\n    getQuotes()\n      .then(response => setAllQuotes(response.data))\n      .catch(error => setError(error))\n  }, [])\n\n  useEffect(() => { getRandomQuote() }, [allQuotes])\n\n  return (\n    <div className=\"app\">\n      {error && <div>{error.message}</div>}\n      <p className=\"app__quote\">{currentQuote.quote}</p>\n      <p className=\"app__author\">{currentQuote.author}</p>\n      <div className=\"app__buttons\">\n        <button disabled={isDisabled} onClick={getPreviousQuote} className=\"app__button\">Previous</button>\n        <button onClick={getRandomQuote} className=\"app__button\">Random quote</button>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}